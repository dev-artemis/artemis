# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-02 10:44
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('student', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField()),
                ('house_num', models.IntegerField()),
                ('street_name', models.CharField(max_length=250)),
                ('area', models.CharField(max_length=250)),
                ('town_city', models.CharField(max_length=250)),
                ('postcode', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=250)),
                ('middle_name', models.CharField(blank=True, max_length=250)),
                ('last_name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ContactAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_contact', to='student.Address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_address', to='student.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_phone', to='student.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_type', models.CharField(choices=[[b'mob', b'Mobile'], [b'home', b'Home']], max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message=b"Phone number must be entered in the format: '+999999999'. Up to 25 digits allowed.", regex=b'^\\+?1?\\d{9,25}$')])),
            ],
        ),
        migrations.CreateModel(
            name='StudentAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_student', to='student.Address')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_address', to='student.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_student', to='student.Phone')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_phone', to='student.Student')),
            ],
        ),
        migrations.AddField(
            model_name='contactphone',
            name='phone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_contact', to='student.Phone'),
        ),
    ]
